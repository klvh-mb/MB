# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /favicon.ico                controllers.Assets.at(path="/public", file="app/images/favicon-1.ico")
GET     /                           controllers.Application.index
GET     /restricted                 controllers.Application.restricted
GET     /assets/javascript/routes.js    controllers.Application.jsRoutes

GET     /profile                    controllers.Application.profile

GET     /login                      controllers.Application.login
POST    /login                      controllers.Application.doLogin
POST	/saveSignupInfo				controllers.Application.saveSignupInfo
POST    /saveSignupInfoFb           controllers.Application.saveSignupInfoFb
POST	/article/comment			controllers.ArticleController.commentOnArticle()

GET		/getAllArticleCategory		controllers.ArticleController.getAllArticleCategory
GET     /get-all-Articles			controllers.ArticleController.getAllArticles
GET     /get-Articles-Categorywise/:id/:offset		controllers.ArticleController.getArticlesCategorywise(id: Long, offset:String)
GET     /get-Six-Articles           controllers.ArticleController.getSixArticles
GET		/get-Related-Articles/:id/:category_id   controllers.ArticleController.getRelatedArticles(id :Long,category_id :Long)
GET		/getDescriptionOfArticle/:id  	controllers.ArticleController.getDescriptionOfArticle(id :Long)
GET		/deleteArticle/:id			controllers.ArticleController.deleteArticle(id :Long)
GET		/article/:id				controllers.ArticleController.infoArticle(id :Long)
GET     /like-article/:id			controllers.ArticleController.onLike(id : Long)
GET     /unlike-article/:id			controllers.ArticleController.onUnlike(id : Long)
GET     /get-new-Articles			controllers.ArticleController.getNewArticles
GET     /get-hot-Articles			controllers.ArticleController.getHotArticles
GET     /get-recommended-Articles   controllers.ArticleController.getRecommendedArticles

GET     /bookmark-article/:article_id				controllers.ArticleController.onBookamrk(article_id : Long)
GET     /unbookmark-article/:article_id				controllers.ArticleController.onUnBookmark(article_id : Long)
GET     /get-bookmark-article/:offset				controllers.ArticleController.getBookmarkedArticles(offset:Integer)

GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET     /signup                     controllers.Application.signup
POST    /signup                     controllers.Application.doSignup

GET     /accounts/unverified        controllers.Signup.unverified
GET     /authenticate/:provider/denied     controllers.Signup.oAuthDenied(provider: String)

GET     /accounts/verify/:token     controllers.Signup.verify(token: String)
GET     /accounts/exists            controllers.Signup.exists

GET     /accounts/password/reset/:token     controllers.Signup.resetPassword(token: String)
POST    /accounts/password/reset            controllers.Signup.doResetPassword

GET     /accounts/password/change    controllers.Account.changePassword
POST    /accounts/password/change    controllers.Account.doChangePassword

GET     /accounts/verify            controllers.Account.verifyEmail

GET     /accounts/add               controllers.Account.link

GET     /accounts/link              controllers.Account.askLink
POST    /accounts/link              controllers.Account.doLink

GET     /accounts/merge             controllers.Account.askMerge
POST    /accounts/merge             controllers.Account.doMerge

GET     /login/password/forgot      controllers.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot      controllers.Signup.doForgotPassword

GET     /get-announcements          controllers.AnnouncementController.getAnnouncements

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#For Testing ONLY
POST    /signupTest                 controllers.Application.doSignupForTest
POST    /loginTest                  controllers.Application.doLoginForTest

#User Info Service
GET		/get-user-info				controllers.UserController.getUserInfo
GET		/about-user					controllers.UserController.aboutUser
POST	/updateUserProfileData		controllers.UserController.updateUserProfileData
POST	/image/upload-profile-photo		controllers.UserController.uploadProfilePhoto
POST	/image/upload-cover-photo		    controllers.UserController.uploadCoverPhoto
GET     /get-all-districts            controllers.Application.getAllDistricts

GET		/image/get-profile-image			controllers.UserController.getProfileImage
GET 	/get-user-newsfeeds/:offset/:id 		controllers.UserController.getUserNewsfeeds(offset : String, id : Long)
GET		/image/get-cover-image			controllers.UserController.getCoverImage
GET		/user-search				controllers.UserController.searchSocialObjects(query: String)
GET		/get-friend-requests		controllers.UserController.getAllFriendRequests
GET		/accept-friend-request		controllers.UserController.acceptFriendRequest(friend_id :Long, notify_id: Long)
GET		/get-join-requests			controllers.UserController.getAllJoinRequests
GET		/accept-join-request/:member_id/:community_id/:notify_id		controllers.UserController.acceptJoinRequest(member_id :Long, community_id :Long, notify_id: Long)
GET		/accept-invite-request/:member_id/:community_id/:notify_id		controllers.UserController.acceptInviteRequest(member_id :Long, community_id :Long, notify_id: Long)
GET		/mark-as-read/:id						controllers.UserController.markNotificationAsRead(id:Long)
GET     /get-bookmark-summary                       controllers.UserController.getBookmarkSummary()
GET     /is-newsfeed-enabled-for-community/:community_id            controllers.UserController.isNewsfeedEnabledForCommunity(community_id : Long)
GET     /toggle-newsfeed-enabled-for-community/:community_id        controllers.UserController.toggleNewsfeedEnabledForCommunity(community_id : Long)

GET     /profile/:id                controllers.UserController.getProfile(id :Long)
GET		/image/get-profile-image-by-id/:id		controllers.UserController.getProfileImageByID(id :Long)
GET		/image/get-cover-image-by-id/:id		controllers.UserController.getCoverImageByID(id :Long)
GET		/image/get-mini-image-by-id/:id		controllers.UserController.getMiniVersionImageByID(id :Long)
GET		/image/get-comment-mini-image-by-id/:id		controllers.UserController.getMiniCommentVersionImageByID(id :Long)
GET		/image/get-thumbnail-image-by-id/:id		controllers.UserController.getThumbnailVersionImageByID(id :Long)
GET		/image/get-thumbnail-cover-image-by-id/:id		controllers.UserController.getThumbnailCoverImageByID(id :Long)
GET		/image/get-original-image-by-id/:id		controllers.UserController.getOriginalImageByID(id :Long)

#Conversation
GET		/get-all-Conversation		controllers.UserController.getAllConversation()
GET		/get-messages/:id/:offset	controllers.UserController.getMessages(id: String, offset: String)
GET		/start-Conversation/:id		controllers.UserController.startConversation(id: Long)
GET		/delete-Conversation/:id	controllers.UserController.deleteConversation(id: Long)
POST	/Message/sendMsg			controllers.UserController.sendMessage()
POST	/sendMessagePhoto			controllers.UserController.sendPhotoInMessage()
GET		/user-friend-search			controllers.UserController.searchUserFriends(query: String)
GET		/image/get-message-image-by-id/:id		controllers.UserController.getMessageImageByID(id :Long)
GET		/get-unread-msg-count		controllers.UserController.getUnreadMsgCount()
GET		/image/get-original-private-image-by-id/:id		controllers.UserController.getOriginalPrivateImageByID(id :Long)

#Friends
GET		/get-user-friends			controllers.FriendsController.getUserFriends
GET 	/get-user-friends-by-ID/:id controllers.FriendsController.getFriendsOfUser(id: Long)
GET		/get-suggested-friends		controllers.FriendsController.getSuggestedFriends
GET		/get-all-friends			controllers.FriendsController.getAllFriendsOfUser
GET		/send-invite				controllers.FriendsController.sendInvitation(id: String)
GET     /friends/:id  				controllers.FriendsController.getUserFriendsByID(id :Long)
GET		/un-friend					controllers.FriendsController.doUnFriend(id: Long)

#Community
GET		/get-not-join-community					controllers.CommunityController.getUserUnJoinCommunity
GET		/get-my-communities			            controllers.CommunityController.getMyCommunities
GET		/get-user-communities/:id		        controllers.CommunityController.getCommunitiesOfUser(id :Long)
GET		/get-user-all-communities/:id			controllers.CommunityController.getAllCommunitiesOfUser(id: Long)
GET		/send-request							controllers.CommunityController.sendJoinRequest(id: String)
GET		/image/get-cover-community-image-by-id/:id	controllers.CommunityController.getFullCoverCommunityImageById(id :Long)
GET     /image/get-thumbnail-cover-community-image-by-id/:id      controllers.CommunityController.getThumbnailCoverCommunityImageById(id :Long)
GET     /get-mini-cover-community-image-by-id/:id           controllers.CommunityController.getMiniCoverCommunityImageById(id :Long)
GET		/community/:id							controllers.CommunityController.getCommunityInfoById(id :Long)
GET		/editCommunity/:id						controllers.CommunityController.getEditCommunityInfo(id :Long)
GET		/community/join/:id						controllers.CommunityController.joinToCommunity(id : Long)
GET		/community/leave/:id					controllers.CommunityController.leaveThisCommunity(id : Long)
GET		/get-community-members/:id				controllers.CommunityController.getCommunityMembers(id : Long)
GET 	/image/get-post-image-by-id/:id				controllers.CommunityController.getPostImageById(id : Long)
GET		/image/get-original-post-image-by-id/:id			controllers.CommunityController.getOriginalPostImageByID(id : Long)
GET		/comments/:id							controllers.CommunityController.getAllComments(id : Long)
GET		/answers/:id							controllers.CommunityController.getAllAnswers(id : Long)
GET		/posts									controllers.CommunityController.getNextPosts(id: String,offset: String)
GET		/questions								controllers.CommunityController.getNextQnAs(id: String,offset: String)
POST	/community/post/comment					controllers.CommunityController.commentOnCommunityPost()
POST	/community/post							controllers.CommunityController.postOnCommunity()
POST    /community/post/delete                  controllers.CommunityController.deletePost()
POST	/createCommunity						controllers.CommunityController.createCommunity()
POST	/image/upload-cover-photo-group/:id		   	controllers.CommunityController.uploadCoverPhoto(id : Long)
POST	/updateCommunityProfileData				controllers.CommunityController.updateCommunityProfileData
GET		/communityQnA/questions/:id				controllers.CommunityController.getAllQuestionsOfCommunity(id : Long)
POST	/communityQnA/question/post				controllers.CommunityController.postQuestionOnCommunity()
POST	/communityQnA/question/answer			controllers.CommunityController.answerToQuestionOnQnACommunity()
POST	/image/uploadPostPhoto						controllers.CommunityController.uploadPhotoOfPost()
GET		/image/getAllIcons							controllers.CommunityController.getAllIcons()
GET		/getAllUnjoinedMembers/:id/:query		controllers.CommunityController.getAllUnjoinedUsers(id : Long, query: String)
GET		/inviteToCommunity/:community_id/:user_id   controllers.CommunityController.sendInviteToJoinCommunity(community_id : Long, user_id: Long)
POST	/image/uploadCommentPhoto						controllers.CommunityController.uploadCommentPhoto()
POST	/image/uploadQnACommentPhoto					controllers.CommunityController.uploadQnACommentPhoto()	
GET		/image/get-comment-image-by-id/:id			controllers.CommunityController.getCommentImageById(id : Long)
GET     /post-landing/:id/:communityId          controllers.CommunityController.postLanding(id:Long, communityId:Long)
GET     /qna-landing/:id/:communityId           controllers.CommunityController.qnaLanding(id:Long, communityId:Long)

GET		/get-bookmark-post/:offset				controllers.CommunityController.getBookmarkedPosts(offset:Integer)
GET		/unbookmark-post/:post_id				controllers.CommunityController.doUnBookmark(post_id : Long)
GET		/bookmark-post/:post_id					controllers.CommunityController.doBookmark(post_id : Long)

GET		/get-my-updates/:timestamp				controllers.CommunityController.getMyUpdates(timestamp:Long)
GET		/get-my-live-updates/:timestamp			controllers.CommunityController.getMyLiveUpdates(timestamp:Long)
GET		/get-next-news-feeds/:timestamp			controllers.CommunityController.getNextNewsFeeds(timestamp:Long)	
GET		/get-newsfeeds/:offset					controllers.CommunityController.getNewsfeeds(offset:Integer)

GET		/like-post/:post_id						controllers.CommunityController.likeThePost(post_id:Long)
GET		/unlike-post/:post_id					controllers.CommunityController.unlikeThePost(post_id:Long)
GET		/like-comment/:comment_id				controllers.CommunityController.likeTheComment(comment_id:Long)
GET		/unlike-comment/:comment_id				controllers.CommunityController.unlikeTheComment(comment_id:Long)

# indexing with elasic search
GET		/searchForPosts/index/:query/:community_id/:offset	controllers.Application.searchForPosts(query: String, community_id: Long,offset:Long)

GET     /get-today-weather-info                 controllers.Application.getTodayWeatherInfo()

GET		/image/article/:year/:month/:date/:name			controllers.ArticleController.getImage(year :Long, month :Long, date :Long, name : String)