# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Test Adsfactor
GET     /ads-mock                   controllers.Application.adsMock
GET     /ads-plain                  controllers.Application.adsPlain
GET     /ng-ads                     controllers.Application.ngAds

# For Testing ONLY
POST    /signupTest                 controllers.Application.doSignupForTest
POST    /loginTest                  controllers.Application.doLoginForTest

# Bing Webmaster
GET     /BingSiteAuth.xml           controllers.Application.bingWebmaster

# Google Webmaster
GET     /googlee42c6d2bf91e90b7.html    controllers.Application.googleWebmaster

GET     /favicon.ico                controllers.Assets.at(path="/public", file="app/images/favicon-1.ico")
GET     /assets/javascript/routes.js    controllers.Application.jsRoutes
GET     /privacy                    controllers.Application.privacy
GET     /terms                      controllers.Application.terms

GET     /restricted                 controllers.Application.restricted
GET     /profile                    controllers.Application.profile

# Promo
GET     /promo                      controllers.promo.PromoController.index
GET     /get-promo-pn-communities   controllers.promo.PromoPNController.getPNCommunities()
GET     /get-promo-pns/:id          controllers.promo.PromoPNController.getPNs(id:Long)

# Mobile
GET     /m-frontpage                controllers.Application.mobileFrontpage
GET     /m-articles                 controllers.Application.mobileArticles
GET     /m-knowledge                controllers.Application.mobileKnowledge
GET     /m-magazine                 controllers.Application.mobileMagazine
GET     /m-my                       controllers.Application.mobileHome
GET     /m-login                    controllers.Application.mobileLogin

# Main
GET     /                           controllers.Application.index
GET     /frontpage                  controllers.Application.mainFrontpage
GET     /articles                   controllers.Application.mainArticles
GET     /knowledge                  controllers.Application.mainKnowledge
GET     /magazine                   controllers.Application.mainMagazine
GET     /my                         controllers.Application.mainHome
GET     /login                      controllers.Application.login

# Home
GET     /signup-promo-code/:promoCode      controllers.Application.homeWithPromoCode(promoCode: String)

POST    /login                      controllers.Application.doLogin
POST    /login-popup                controllers.Application.doLoginPopup
POST    /saveSignupInfo             controllers.Application.saveSignupInfo
POST    /saveSignupInfoFb           controllers.Application.saveSignupInfoFb
GET     /get-application-info       controllers.Application.getApplicationInfo
GET     /get-user-target-profile    controllers.Application.getUserTargetProfile

# PKView
GET     /get-pkview-info/:id        controllers.PKViewController.infoPKView(id :Long)
GET     /get-all-pkviews            controllers.PKViewController.getAllPKViews
GET     /get-comm-pkviews/:id       controllers.PKViewController.getPKViewsByCommunity(id :Long)
GET     /yesvote-pkview/:id         controllers.PKViewController.onYesVote(id : Long)
GET     /novote-pkview/:id          controllers.PKViewController.onNoVote(id : Long)
GET     /like-pkview/:id            controllers.PKViewController.onLike(id : Long)
GET     /unlike-pkview/:id          controllers.PKViewController.onUnlike(id : Long)
GET     /get-bookmarked-pkviews/:offset     controllers.PKViewController.getBookmarkedPKViews(offset:Integer)
GET     /bookmark-pkview/:id        controllers.PKViewController.onBookmark(id : Long)
GET     /unbookmark-pkview/:id      controllers.PKViewController.onUnBookmark(id : Long)
POST    /community/pkview/comment   controllers.CommunityController.commentToPkViewOnCommunity()

# Campaign
GET     /get-campaign-info/:id      controllers.CampaignController.infoCampaign(id :Long)
GET     /get-campaign-announced-winners/:id      controllers.CampaignController.getCampaignAnnouncedWinners(id :Long)
GET     /like-campaign/:id          controllers.CampaignController.onLike(id : Long)
GET     /unlike-campaign/:id        controllers.CampaignController.onUnlike(id : Long)
POST    /join-campaign              controllers.CampaignController.joinCampaign
POST    /withdraw-campaign          controllers.CampaignController.withdrawCampaign

GET     /get-all-article-categories     controllers.ArticleController.getAllArticleCategories
GET     /get-Articles-Categorywise/:category_id/:offset     controllers.ArticleController.getArticlesCategorywise(category_id: Long, offset:Integer)
GET     /get-Articles-TagWise/:tagword_id/:offset           controllers.ArticleController.getArticlesTagwise(tagword_id: Long, offset:Integer)
GET     /get-Six-Articles/:category_id          controllers.ArticleController.getSixArticles(category_id: Long)
GET     /get-Related-Articles/:id/:category_id  controllers.ArticleController.getRelatedArticles(id :Long,category_id :Long)
GET     /get-article-info/:id       controllers.ArticleController.infoArticle(id :Long)
GET     /like-article/:id           controllers.ArticleController.onLike(id : Long)
GET     /unlike-article/:id         controllers.ArticleController.onUnlike(id : Long)
GET     /get-new-Articles/:category_id          controllers.ArticleController.getNewArticles(category_id: Long)
GET     /get-hot-Articles/:category_id          controllers.ArticleController.getHotArticles(category_id: Long)
GET     /get-recommended-Articles/:category_id  controllers.ArticleController.getRecommendedArticles(category_id: Long)

GET     /get-bookmarked-articles/:offset            controllers.ArticleController.getBookmarkedArticles(offset:Integer)
GET     /bookmark-article/:id       controllers.ArticleController.onBookmark(id : Long)
GET     /unbookmark-article/:id     controllers.ArticleController.onUnBookmark(id : Long)

GET     /get-hot-articles-tagwords  controllers.TagWordController.getHotArticlesTagWords
GET     /get-soon-moms-tagwords     controllers.TagWordController.getSoonToBeMomTagWords
GET     /click-tagword/:id          controllers.TagWordController.onClick(id : Long)

GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)
GET     /authenticatePopup/:provider    com.feth.play.module.pa.controllers.Authenticate.authenticatePopup(provider: String)
 
GET     /signup                     controllers.Application.signup
POST    /signup                     controllers.Application.doSignup

GET     /accounts/unverified        controllers.Signup.unverified
GET     /authenticate/:provider/denied     controllers.Signup.oAuthDenied(provider: String)

GET     /accounts/verify/:token     controllers.Signup.verify(token: String)
GET     /accounts/exists            controllers.Signup.exists

GET     /accounts/password/reset/:token     controllers.Signup.resetPassword(token: String)
POST    /accounts/password/reset            controllers.Signup.doResetPassword

GET     /accounts/password/change    controllers.Account.changePassword
POST    /accounts/password/change    controllers.Account.doChangePassword

GET     /accounts/verify            controllers.Account.verifyEmail

GET     /accounts/add               controllers.Account.link

GET     /accounts/link              controllers.Account.askLink
POST    /accounts/link              controllers.Account.doLink

GET     /accounts/merge             controllers.Account.askMerge
POST    /accounts/merge             controllers.Account.doMerge

GET     /login/password/forgot      controllers.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot      controllers.Signup.doForgotPassword

GET     /get-general-announcements  controllers.AnnouncementController.getGeneralAnnouncements
GET     /get-top-announcements      controllers.AnnouncementController.getTopAnnouncements

# User Info Service
GET     /get-user-info              controllers.UserController.getUserInfo
GET     /complete-home-tour         controllers.UserController.completeHomeTour
GET     /about-user                 controllers.UserController.aboutUser
POST    /updateUserProfileData      controllers.UserController.updateUserProfileData
POST    /image/upload-profile-photo     controllers.UserController.uploadProfilePhoto
POST    /image/upload-cover-photo           controllers.UserController.uploadCoverPhoto
GET     /get-all-districts            controllers.Application.getAllDistricts

GET     /image/get-profile-image            controllers.UserController.getProfileImage
GET     /get-user-newsfeeds-posts/:offset/:id       controllers.UserController.getUserNewsfeeds(offset : String, id : Long)
GET     /get-user-newsfeeds-comments/:offset/:id    controllers.UserController.getUserNewsfeedsComments(offset : String, id : Long)
GET     /image/get-cover-image          controllers.UserController.getCoverImage
GET     /user-search                controllers.UserController.searchSocialObjects(query: String)
GET     /accept-friend-request      controllers.UserController.acceptFriendRequest(friend_id :Long, notify_id: Long)
GET     /accept-join-request/:member_id/:community_id/:notify_id        controllers.UserController.acceptJoinRequest(member_id :Long, community_id :Long, notify_id: Long)
GET     /accept-invite-request/:member_id/:community_id/:notify_id      controllers.UserController.acceptInviteRequest(member_id :Long, community_id :Long, notify_id: Long)
GET     /mark-as-read/:ids                      controllers.UserController.markNotificationAsRead(ids:String)
GET     /ignore-it/:id                      controllers.UserController.ignoreNotification(id:Long)
GET     /get-bookmark-summary                       controllers.UserController.getBookmarkSummary()
GET     /is-newsfeed-enabled-for-community/:community_id            controllers.UserController.isNewsfeedEnabledForCommunity(community_id : Long)
GET     /toggle-newsfeed-enabled-for-community/:community_id        controllers.UserController.toggleNewsfeedEnabledForCommunity(community_id : Long)
GET     /get-headerBar-data         controllers.UserController.getHeaderBarMetadata()

GET     /profile/:id                controllers.UserController.getProfile(id :Long)
GET     /image/get-profile-image-by-id/:id      controllers.UserController.getProfileImageByID(id :Long)
GET     /image/get-cover-image-by-id/:id        controllers.UserController.getCoverImageByID(id :Long)
GET     /image/get-mini-image-by-id/:id     controllers.UserController.getMiniVersionImageByID(id :Long)
GET     /image/get-comment-mini-image-by-id/:id     controllers.UserController.getMiniCommentVersionImageByID(id :Long)
GET     /image/get-thumbnail-image-by-id/:id        controllers.UserController.getThumbnailVersionImageByID(id :Long)
GET     /image/get-thumbnail-cover-image-by-id/:id      controllers.UserController.getThumbnailCoverImageByID(id :Long)
GET     /image/get-original-image-by-id/:id     controllers.UserController.getOriginalImageByID(id :Long)

# Conversation
GET     /get-all-Conversation       controllers.UserController.getAllConversation()
GET     /get-messages/:id/:offset   controllers.UserController.getMessages(id: Long, offset: Long)
GET     /start-Conversation/:id     controllers.UserController.startConversation(id: Long)
GET     /delete-Conversation/:id    controllers.UserController.deleteConversation(id: Long)
POST    /Message/sendMsg            controllers.UserController.sendMessage()
POST    /image/sendMessagePhoto     controllers.UserController.sendPhotoInMessage()
GET     /user-friend-search         controllers.UserController.searchUserFriends(query: String)
GET     /image/get-message-image-by-id/:id      controllers.UserController.getMessageImageByID(id :Long)
GET     /get-unread-msg-count       controllers.UserController.getUnreadMsgCount()
GET     /image/get-original-private-image-by-id/:id     controllers.UserController.getOriginalPrivateImageByID(id :Long)
GET     /image/getEmoticons         controllers.UserController.getEmoticons()

# Friends
GET     /get-suggested-friends      controllers.FriendsController.getSuggestedFriends
GET     /get-my-friends-for-utility controllers.FriendsController.getMyFriendsForUtiltiy
GET     /get-user-friends-for-utility/:id       controllers.FriendsController.getUserFriendsForUtiltiy(id: Long)
GET     /get-all-my-friends         controllers.FriendsController.getAllMyFriends
GET     /get-all-user-friends/:id   controllers.FriendsController.getAllUserFriends(id: Long)
GET     /send-invite                controllers.FriendsController.sendInvitation(id: String)
GET     /un-friend                  controllers.FriendsController.doUnFriend(id: Long)

# Community
GET     /get-zodiac-year-communities            controllers.CommunityController.getZodiacYearCommunities
GET     /get-district-communities               controllers.CommunityController.getDistrictCommunities
GET     /get-topic-communities                  controllers.CommunityController.getTopicCommunities
GET     /get-other-communities                  controllers.CommunityController.getOtherCommunities
GET     /get-all-business-community-categories  controllers.CommunityController.getAllBusinessCommunityCategories
GET     /get-all-social-community-categories    controllers.CommunityController.getAllSocialCommunityCategories
GET     /get-social-community-categories-map    controllers.CommunityController.getSocialCommunityCategoriesMap(indexOnly:Boolean)
GET     /get-zodiac-year-month-community-categories-map    controllers.CommunityController.getZodiacYearMonthCommunityCategoriesMap(indexOnly:Boolean)
GET     /get-unjoined-communities               controllers.CommunityController.getUserUnJoinedCommunities
GET     /get-my-communities                     controllers.CommunityController.getMyCommunities
GET     /get-user-communities/:id               controllers.CommunityController.getUserCommunities(id :Long)
GET     /send-request                           controllers.CommunityController.sendJoinRequest(id: String)
GET     /image/get-cover-community-image-by-id/:id  controllers.CommunityController.getFullCoverCommunityImageById(id :Long)
GET     /image/get-thumbnail-cover-community-image-by-id/:id      controllers.CommunityController.getThumbnailCoverCommunityImageById(id :Long)
GET     /get-mini-cover-community-image-by-id/:id           controllers.CommunityController.getMiniCoverCommunityImageById(id :Long)
GET     /community/:id                          controllers.CommunityController.getCommunityInfoById(id :Long)
GET     /editCommunity/:id                      controllers.CommunityController.getEditCommunityInfo(id :Long)
GET     /community/join/:id                     controllers.CommunityController.joinToCommunity(id : Long)
GET     /community/leave/:id                    controllers.CommunityController.leaveThisCommunity(id : Long)
GET     /get-community-members/:id              controllers.CommunityController.getCommunityMembers(id : Long)
GET     /image/get-post-image-by-id/:id             controllers.CommunityController.getPostImageById(id : Long)
GET     /image/get-original-post-image-by-id/:id            controllers.CommunityController.getOriginalPostImageByID(id : Long)
GET     /comments/:id                           controllers.CommunityController.getAllComments(id : Long)
GET     /posts                                  controllers.CommunityController.getNextPosts(id: String,offset: String,time:String)
GET     /questions                              controllers.CommunityController.getNextQnAs(id: String,offset: String,time:String)
GET     /community/posts/:id                    controllers.CommunityController.getAllPostsOfCommunity(id : Long)
POST    /community/post                         controllers.CommunityController.postOnCommunity()
POST    /community/post/comment                 controllers.CommunityController.commentOnCommunityPost()
GET     /delete-post/:postId                    controllers.CommunityController.deletePost(postId : Long)
GET     /delete-comment/:commentId              controllers.CommunityController.deleteComment(commentId : Long)
POST    /createCommunity                        controllers.CommunityController.createCommunity()
POST    /image/upload-cover-photo-group/:id     controllers.CommunityController.uploadCoverPhoto(id : Long)
POST    /updateCommunityProfileData             controllers.CommunityController.updateCommunityProfileData
GET     /communityQnA/questions/:id             controllers.CommunityController.getAllQuestionsOfCommunity(id : Long)
POST    /communityQnA/question/post             controllers.CommunityController.postQuestionOnCommunity()
POST    /communityQnA/question/answer           controllers.CommunityController.answerToQuestionOnQnACommunity()
POST    /image/uploadPostPhoto                  controllers.CommunityController.uploadPhotoOfPost()
GET     /image/getCommunityIcons                controllers.CommunityController.getCommunityIcons()
GET     /getAllUnjoinedMembers/:id/:query       controllers.CommunityController.getAllUnjoinedUsers(id : Long, query: String)
GET     /inviteToCommunity/:community_id/:user_id   controllers.CommunityController.sendInviteToJoinCommunity(community_id : Long, user_id: Long)
POST    /image/uploadCommentPhoto               controllers.CommunityController.uploadCommentPhoto()
GET     /image/get-comment-image-by-id/:id      controllers.CommunityController.getCommentImageById(id : Long)
GET     /post-landing/:id/:communityId          controllers.CommunityController.postLanding(id:Long, communityId:Long)
GET     /qna-landing/:id/:communityId           controllers.CommunityController.qnaLanding(id:Long, communityId:Long)
GET     /get-post-body/:id                      controllers.CommunityController.getAllPostBody(id : Long)

GET     /get-bookmarked-posts/:offset           controllers.CommunityController.getBookmarkedPosts(offset:Integer)
GET     /unbookmark-post/:post_id               controllers.CommunityController.doUnBookmark(post_id : Long)
GET     /bookmark-post/:post_id                 controllers.CommunityController.doBookmark(post_id : Long)

GET     /get-my-updates/:timestamp              controllers.CommunityController.getMyUpdates(timestamp:Long)
GET     /get-my-live-updates/:timestamp         controllers.CommunityController.getMyLiveUpdates(timestamp:Long)
GET     /get-next-news-feeds/:timestamp         controllers.CommunityController.getNextNewsFeeds(timestamp:Long)    
GET     /get-newsfeeds/:offset                  controllers.CommunityController.getNewsfeeds(offset:Integer)
GET     /get-businessfeeds/:offset/:commCatId   controllers.CommunityController.getBusinessfeedsByCategory(offset:Integer, commCatId:Long)
GET     /get-hotnewsfeeds/:offset               controllers.CommunityController.getHotNewsfeeds(offset:Integer)

GET     /like-post/:post_id                     controllers.CommunityController.likeThePost(post_id:Long)
GET     /unlike-post/:post_id                   controllers.CommunityController.unlikeThePost(post_id:Long)
GET     /like-comment/:comment_id               controllers.CommunityController.likeTheComment(comment_id:Long)
GET     /unlike-comment/:comment_id             controllers.CommunityController.unlikeTheComment(comment_id:Long)
GET     /want-ans/:post_id                      controllers.CommunityController.wantAnswerFromQuestion(post_id:Long)
GET     /unwant-ans/:post_id                    controllers.CommunityController.unwantAnswerFromQuestion(post_id:Long)

# FrontPage
GET     /get-hotcommunities                     controllers.FrontPageController.getHotCommunities()
GET     /get-slider-topics                      controllers.FrontPageController.getSliderTopics()
GET     /get-promo-topics                       controllers.FrontPageController.getPromoTopics()
GET     /get-promo2-topics                      controllers.FrontPageController.getPromo2Topics()
GET     /get-featured-topics                    controllers.FrontPageController.getFeaturedTopics()
GET     /get-game-topics                       controllers.FrontPageController.getGameTopics()

# PreNursery
GET     /get-pn-communities                     controllers.PreNurseryController.getPNCommunities()
GET     /getPNs/:id                             controllers.PreNurseryController.getPNs(id:Long)

# Edm settings
POST    /save-edm-settings                      controllers.UserSettingsController.saveEdmSettings
GET     /get-edm-settings                       controllers.UserSettingsController.getEdmSettings

# Privacy settings
POST    /save-privacy-settings                  controllers.UserSettingsController.savePrivacySettings
GET     /get-privacy-settings                   controllers.UserSettingsController.getPrivacySettings

# Report Generation
POST    /send-report                            controllers.ReportObjectController.createReport()

# indexing with elastic search
GET     /searchForPosts/index/:query/:community_id/:offset  controllers.Application.searchForPosts(query: String, community_id: Long,offset:Long)

GET     /get-today-weather-info                 controllers.Application.getTodayWeatherInfo()

GET     /image/article/:year/:month/:date/:name     controllers.ArticleController.getImage(year :Long, month :Long, date :Long, name : String)
GET     /image/frontpage/:year/:month/:date/:name   controllers.FrontPageController.getImage(year :Long, month :Long, date :Long, name : String)
GET     /image/campaign/:year/:month/:date/:name    controllers.CampaignController.getImage(year :Long, month :Long, date :Long, name : String)

# Gamification
POST    /sign-in-for-today                      controllers.GameController.signInForToday()
GET     /get-gameaccount                        controllers.GameController.getGameAccount()
GET     /get-transactions/:offset               controllers.GameController.getGameTransactions(offset : String)
GET     /invite-by-mail/:mail                   controllers.UserController.inviteByEmail(mail: String)
GET     /request-redemption/:id/:points         controllers.UserController.requestToRedemption(id: Long,points: Long)

# Admin
GET     /admin/get-campaign-joiners/:id         controllers.AdminController.getCampaignJoiners(id :Long)